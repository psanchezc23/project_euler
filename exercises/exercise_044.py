import time


def exercise_044():
    """
    Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first
    ten pentagonal numbers are:

    1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

    It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their
    difference, 70 − 22 = 48, is not pentagonal.

    Find the pair of pentagonal numbers, Pj and Pk, for which their sum and
    difference are pentagonal and D = |Pk − Pj| is minimised; what is the
    value of D?

    :return: difference between pentagonal numbers.
    :rtype: int
    """

    pentagonal_numbers = set()
    pentagonal_sums = {}

    n = 0
    pentagonal_n = 0
    while True:
        pentagonal_n += 3 * n + 1
        if pentagonal_n in pentagonal_sums:
            return pentagonal_sums[pentagonal_n]

        for pn in pentagonal_numbers:
            diff = pentagonal_n - pn
            if diff in pentagonal_numbers:
                pentagonal_sums[pentagonal_n + pn] = diff

        pentagonal_numbers.add(pentagonal_n)
        n += 1


if __name__ == '__main__':
    start_time = time.time()
    print(exercise_044())
    end_time = time.time()
    print('{} s'.format(end_time - start_time))
