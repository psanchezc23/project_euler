import numpy as np


def exercise_002(maximum_value):
    """
    Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the
    first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the
    even-valued terms.

    :param int maximum_value: Maximum number to look for Fibonacci
    :return: The sum of the even-valued terms of the Fibonacci sequence below maximum_value.
    :rtype: int.

    """

    def _next_value(array):
        return np.sum(array[-2:])

    fibonacci = [1, 1]
    n = _next_value(fibonacci)
    while n < maximum_value:
        fibonacci.append(n)
        n = _next_value(fibonacci)

    fibonacci = np.array(fibonacci)
    idx = (fibonacci % 2) == 0

    return np.sum(fibonacci[idx])


if __name__ == "__main__":
    maximum_value = 4000000
    print(exercise_002(maximum_value))
