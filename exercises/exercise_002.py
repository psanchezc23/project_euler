import numpy as np
import time


def exercise_002(maximum_value):
    """
    Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the
    first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the
    even-valued terms.

    :param int maximum_value: Maximum number to look for Fibonacci
    :return: The sum of the even-valued terms of the Fibonacci sequence below maximum_value.
    :rtype: int.

    """

    fibonacci = [1, 1]
    cum_sum = 0
    for i in range(maximum_value):
        n = np.sum(fibonacci[-2:])
        if n > maximum_value:
            break
        fibonacci.append(n)
        if (n % 2) == 0:
            cum_sum += n

    return cum_sum


if __name__ == "__main__":
    start_time = time.time()
    maximum_value = 4000000
    print(exercise_002(maximum_value))
    end_time = time.time()
    print('{} s'.format(end_time - start_time))
